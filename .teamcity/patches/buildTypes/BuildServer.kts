package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2018_2.*
import jetbrains.buildServer.configs.kotlin.v2018_2.buildFeatures.dockerSupport
import jetbrains.buildServer.configs.kotlin.v2018_2.buildSteps.GradleBuildStep
import jetbrains.buildServer.configs.kotlin.v2018_2.buildSteps.dockerCommand
import jetbrains.buildServer.configs.kotlin.v2018_2.buildSteps.gradle
import jetbrains.buildServer.configs.kotlin.v2018_2.buildSteps.script
import jetbrains.buildServer.configs.kotlin.v2018_2.triggers.vcs
import jetbrains.buildServer.configs.kotlin.v2018_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with id = 'BuildServer'
accordingly, and delete the patch script.
*/
changeBuildType(RelativeId("BuildServer")) {
    expectSteps {
        gradle {
            tasks = "clean build"
            buildFile = ""
            gradleWrapperPath = ""
        }
    }
    steps {
        insert(0) {
            script {
                workingDir = "server"
                scriptContent = "rm -rf build"
            }
        }
        update<GradleBuildStep>(1) {
            tasks = "clean :server:build"
        }
        insert(2) {
            dockerCommand {
                commandType = build {
                    source = path {
                        path = "server/Dockerfile"
                    }
                    contextDir = "server"
                    namesAndTags = """
                        799238304447.dkr.ecr.eu-central-1.amazonaws.com/snakepit/server:%build.number%
                        799238304447.dkr.ecr.eu-central-1.amazonaws.com/snakepit/server:latest
                    """.trimIndent()
                    commandArgs = "--pull"
                }
                param("dockerImage.platform", "linux")
            }
        }
        insert(3) {
            dockerCommand {
                commandType = push {
                    namesAndTags = "799238304447.dkr.ecr.eu-central-1.amazonaws.com/snakepit/server:%build.number%"
                }
            }
        }
    }

    triggers {
        add {
            vcs {
                triggerRules = "+:server/**"
                branchFilter = ""
            }
        }
    }

    features {
        add {
            dockerSupport {
                loginToRegistry = on {
                    dockerRegistryId = "PROJECT_EXT_10"
                }
            }
        }
    }
}
